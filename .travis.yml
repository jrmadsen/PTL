# Madthreading Travis CI file

language: python

python:
  - "3.6"

# The apt packages here install our compiled code dependencies.
matrix:
  include:
    # GCC 4.9
    - os: linux
      dist: xenial
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
            - g++-4.9
            - build-essential
            - cmake
            - libtbb-dev
            - clang-tidy
      env:
        - MATRIX_EVAL="CC=$(which gcc-4.9) && CXX=$(which g++-4.9) && COVERAGE=1"
    # GCC 5
    - os: linux
      dist: xenial
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - g++-5
            - build-essential
            - cmake
            - libtbb-dev
            - clang-tidy
      env:
        - MATRIX_EVAL="CC=$(which gcc-5) && CXX=$(which g++-5) && COVERAGE=0"
    # GCC 6
    - os: linux
      dist: xenial
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - build-essential
            - cmake
            - libtbb-dev
            - clang-tidy
      env:
        - MATRIX_EVAL="CC=$(which gcc-6) && CXX=$(which g++-6) && COVERAGE=0"
    # GCC 7
    - os: linux
      dist: xenial
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - build-essential
            - cmake
            - libtbb-dev
            - clang-tidy
      env:
        - MATRIX_EVAL="CC=$(which gcc-7) && CXX=$(which g++-7) && COVERAGE=0"
    # Clang 5.0
    - os: linux
      dist: xenial
      sudo: false
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-5.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-5.0
            - clang++-5.0
            - build-essential
            - cmake
            - clang-tidy
      env:
        - MATRIX_EVAL="CC=$(which clang-5.0) && CXX=$(which clang++-5.0) && COVERAGE=0 && NOTBB=1"


before_install:
    - eval "${MATRIX_EVAL}"
    - export CC=${CC}
    - export CXX=${CXX}
    - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    - bash miniconda.sh -b -p ${HOME}/miniconda
    - export PATH="${HOME}/miniconda/bin:${PATH}"
    - conda config --add channels jrmadsen
    - conda config --set always_yes yes --set changeps1 no
    - conda update conda

install:
    - env
    - conda install python=3.6 pyctest
    - export ARGS="--static-analysis --pyctest-submit --pyctest-clean-first --pyctest-model=Continuous --pyctest-site=Travis"
    - if [ -z "${NOTBB}" ]; then ARGS="${ARGS} --tbb"; fi
    - if [ -n "${COVERAGE}" ]; then
        ARGS="${ARGS} --coverage --num-tasks=64";
      else
        ARGS="${ARGS} --num-tasks=256 --pyctest-build-type=RelWithDebInfo";
      fi
    - python ./pyctest-runner.py ${ARGS} -- -VV;
    - cd build-PTL
    - cmake --build . --target install

script:
    - eval "${MATRIX_EVAL}"
